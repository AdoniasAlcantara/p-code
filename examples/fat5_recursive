# Calculates 5! recursively.
# Function receives an argument at position 4 on the stack 
# and the result is returned in the same position.

# main 
INT 0 3
LIT 0 5
CAL 0 4     # fat(5)
OPR 0 0

# fat(n)
INT 0 3
LOD 1 3     # Load n
LIT 0 1
OPR 0 13    # n <= 1 ?
JPC 0 10    # if true then
OPR 0 0     # return n
LOD 1 3
LIT 0 1
OPR 0 3
CAL 0 4     # fib(n - 1)
LOD 1 3
OPR 0 4     # fib(n - 1) * n
STO 1 3     # n := fib(n - 1) * n
OPR 0 0     # return n